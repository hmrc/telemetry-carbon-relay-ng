instance = "${HOST}"

# Not setting this variable allows for all cpu cores to be used
# max_procs = 2

spool_dir = "/var/spool/carbon-relay-ng"

pid_file = "carbon-relay-ng.pid"

log_level = "info"

validation_level_legacy = "medium"

validate_order = false

bad_metrics_max_age = "1h"

admin_addr  = "0.0.0.0:2004"
http_addr   = "0.0.0.0:8081"
listen_addr = "0.0.0.0:2003"
pickle_addr = "0.0.0.0:2013"


blocklist = [
  'prefix collectd.backup_mongodb-',
  'prefix collectd.localhost',
  'prefix tax.',
  'regex ^play\.[^.]+\.+[^.]+\.[^.]+\.compute\.internal\.ch.*',
  'regex ^play\.\$\{appName\}\.',
  'regex ^play\.email\..*\.bounces\..*\.(?:TemporaryBounce|PermanentBounce)\..*'
]

[amqp]
amqp_enabled = false

 #carbon-relay-ng supports very limited variables
 [[route]]
 key = 'carbon-clickhouse'
 type = 'consistentHashing'
 destinations = [
   '${GRAFANA_NET_ADDR} spool=true',
   '${GRAFANA_NET_API_KEY} spool=true'
 ]

[instrumentation]
graphite_addr = "localhost:2003"
graphite_interval = 6000  # in ms

# Rewrite carbon-relay-ng internal metrics
[[rewriter]]
old = '/^carbon-relay-ng\.([^.]+)\.ip-([^.]+)\.(.*)/'
new = 'telemetry.metrics.carbon-relay-ng.ecs-carbon-relay.$2.$1.$3'
max = -1

# alter carbon-relay-ng metrics for relay nodes
[[rewriter]]
old = '/service_is_carbon-relay-ng.instance_is_ip-/'
new = 'telemetry.metrics.carbon-relay-ng.ecs-carbon-relay.'
max = -1

# Rename PostgreSQL metrics
[[rewriter]]
old = '/^collectd\.([^\.]+)\.postgresql-(.*)/'
new = 'rds.postgresql.$1.$2'
max = -1

# Fix container hostnames for heritage (private zone\CIP)
[[rewriter]]
old = '/(play|portal)\.([\w|-]*)\.+([-\d]+)\.(.*)/'
new = '$1.$2.$3-$4'
max = -1

# Fix container hostnames for ECS (MDTP)
[[rewriter]]
old = '/(play|portal)\.([\w|-]*)\.+ip-([^\.]+)\.eu-west-2\.compute\.internal\.(.*)/'
new = '$1.$2.ecs-$3-$2.$4'
max = -1

# Rewrite ingress-gateway metrics
# from: 'telegraf.<EC2-instanceId>.<metric-type>.envoy.ingressgateway-<ZONE_AND_SUFFIX>.<ecs-task-id>.<metric-path>[.<metric-path>]*'
# to: 'microservice.<microservice-name-and-zone>.<ecs-task-id>.<envoy>.<metric_type>.<metric-path>[.<metric-path>]*'
[[rewriter]]
old = '/^telegraf\.(?:[^\.]+)\.([^\.]+)\.envoy\.ingressgateway-(public-rate|public-monolith|protected-rate|mdtp|public|protected)[^\.]*\.([^\.]+)\.(.*)+/'
new = 'microservice.ingressgateway-$2.$3.envoy.$1.$4'
max = -1

# Rewrite envoy metrics
# from: 'telegraf.<EC2-instanceId>.<metric-type>.envoy.<SERVICE_NAME_AND_ZONE>.<ecs-task-id>.<metric-path>[.<metric-path>]*'
# to: 'microservice.<microservice-name>.<ecs-task-id>.<envoy>.<metric_type>.<metric-path>[.<metric-path>]*'
[[rewriter]]
old = '/^telegraf\.(?:[^\.]+)\.([^\.]+)\.envoy\.([^\.]+)-(?:public-rate|public-monolith|protected-rate|mdtp|public|protected|cip)[^\.]*\.([^\.]+)\.(.*)+/'
new = 'microservice.$2.$3.envoy.$1.$4'
max = -1

# Rewrite fluentbit forwarder metrics
# from: 'telegraf.<EC2-instanceId>.<cluster-name>.<input_tag>.<output_plugin>.<api_endpoint>.<input_tag>.<metric-path>'
# to: 'logging.<cluster-name>.<EC2-instanceId>.<output_plugin>.<metric-path>'
[[rewriter]]
old = '/^telegraf\.([^\.]+)\.([^\.]+)\.prometheus\.([^\.]+)\.[^\.]+fluentbit-forwarder[^\.]+\.prometheus\.(.*)/'
new = 'logging.$2.$1.$3.$4'
max = -1

# Rewrite telegraf/ecs-agent/fluentbit-forwarder docker input metrics.
# These are the metrics from the docker input plugin prefixed with docker-insights
# from: 'docker-insights.<EC2-instanceId>.<ECS_CLUSTER_TAG>.<TELEGRAF_TAG>.<container_image>.<container_name>.<container_status>.<container_version>.<metric-path>'
# to: 'telemetry.metrics.ecs.<cluster-name>.<EC2-instanceId>.<container_name>.<metric-path>'
[[rewriter]]
old = '/^docker-insights\.([^\.]+)\.([^\.]+)\.([^\.]+)\.([^\.]+)\.([^\.]+)\.([^\.]+)\.([^\.]+)\.(.*)/'
new = 'telemetry.metrics.ecs.$2.$1.$5.$8'
max = -1
# Rewrite CIP PaaS Ingress Services to include '-blue' suffix in the service name
# These are the metrics from the CIP PaaS telegraf sidecar containers which export metrics for all containers within the task
# from: 'telegraf.<EC2-instanceId>.<cluster_arn>.<cluster_arn>.<service_name>.<container_id>.<container_name>.<task_revision>.<task_arn>.<metric_path>'
# to:   'telegraf.<EC2-instanceId>.<cluster_arn>.<cluster_arn>.<service_name>-blue.<container_id>.<container_name>.<task_revision>.<task_arn>.<metric_path>'
# example
# from: 'telegraf.ip-10-64-28-152_eu-west-2_compute_internal.arn:aws:ecs:eu-west-2:893166705434:cluster-paas-3094.arn:aws:ecs:eu-west-2:893166705434:cluster-paas-3094.envoy.mdtp-paas-ingress-3094.687b8171da1349069b1f94e69da30153-4057181352.envoy.1.arn:aws:ecs:eu-west-2:893166705434:task-paas-3094-687b8171da1349069b1f94e69da30153.ecs_container_mem.usage_percent'
# to: 'telegraf.ip-10-64-28-152_eu-west-2_compute_internal.arn:aws:ecs:eu-west-2:893166705434:cluster-paas-3094.arn:aws:ecs:eu-west-2:893166705434:cluster-paas-3094.envoy.mdtp-paas-ingress-3094-blue.687b8171da1349069b1f94e69da30153-4057181352.envoy.1.arn:aws:ecs:eu-west-2:893166705434:task-paas-3094-687b8171da1349069b1f94e69da30153.ecs_container_mem.usage_percent'
[[rewriter]]
old = '/(^telegraf\.[^\.]+\.arn:aws:ecs:[^\.]+:[^\.]+:cluster-paas[^\.]*\..*paas-ingress[^\.]*)(\..*)/'
new = '${1}-blue${2}'
max = -1

# rewrite CIP PaaS telegraf ecs plugin container memory metrics
# from: 'telegraf.<EC2-instanceId>.<cluster_arn>.<cluster_arn>.<container_name>.<service_name>-<deployment_colour>.<container_id>.<container_name>.<task_revision>.<task_arn>.ecs_container_meta|ecs_container_mem.<metric_path>'
# to:   'cip.metrics.ecs.<cluster_name>.<service_name>.<deployment_colour>.<task_id>.<container_name>.ecs_container_meta|ecs_container_mem.<metric_path>'
# example
# from: 'telegraf.ip-10-64-28-152_eu-west-2_compute_internal.arn:aws:ecs:eu-west-2:893166705434:cluster-paas-3094.arn:aws:ecs:eu-west-2:893166705434:cluster-paas-3094.fluentbit.cip-hello-flask-3094-blue.687b8171da1349069b1f94e69da30153-3040842310.fluentbit.1.arn:aws:ecs:eu-west-2:893166705434:task-paas-3094-687b8171da1349069b1f94e69da30153.ecs_container_mem.hierarchical_memory_limit'
# to: 'cip.metrics.ecs.paas-3094.cip-hello-flask-3094.blue.687b8171da1349069b1f94e69da30153.fluentbit.ecs_container_mem.hierarchical_memory_limit'
[[rewriter]]
old = '/^telegraf\.[^\.]+\.arn:aws:ecs:[^\.]+:[^\.]+:cluster-(paas[^\.]*)\.arn:aws:ecs:[^\.]+\.([^\.]+)\.([^\.]+)-([^\.]+)\.([^\.]+)\-[^\.]+\..*\.(ecs_container_meta|ecs_container_mem)\.(.*)/'
new = 'cip.metrics.ecs.${1}.${3}.${4}.${5}.${2}.${6}.${7}'
max = -1

# rewrite CIP PaaS telegraf ecs plugin container cpu metrics
# from: 'telegraf.<EC2-instanceId>.<cluster_arn>.<cluster_arn>.<container_name>.cpu*.<service_name>-<deployment_colour>.<container_id>.<container_name>.<task_revision>.<task_arn>.ecs_container_cpu.<metric_path>'
# to:   'cip.metrics.ecs.<cluster_name>.<service_name>.<deployment_colour>.<task_id>.<container_name>.ecs_container_cpu.cpu*.<metric_path>'
# example
# from: 'telegraf.ip-10-64-28-152_eu-west-2_compute_internal.arn:aws:ecs:eu-west-2:893166705434:cluster-paas-3094.arn:aws:ecs:eu-west-2:893166705434:cluster-paas-3094.fluentbit.cpu-total.cip-hello-flask-3094-blue.687b8171da1349069b1f94e69da30153-3040842310.fluentbit.1.arn:aws:ecs:eu-west-2:893166705434:task-paas-3094-687b8171da1349069b1f94e69da30153.ecs_container_cpu.usage_total'
# to: 'cip.metrics.ecs.paas-3094.cip-hello-flask-3094.blue.687b8171da1349069b1f94e69da30153.fluentbit.ecs_container_cpu.cpu-total.usage_total'
[[rewriter]]
old = '/^telegraf\.[^\.]+\.arn:aws:ecs:[^\.]+:[^\.]+:cluster-(paas[^\.]*)\.arn:aws:ecs:[^\.]+\.[^\.]+\.(cpu[^\.]*)\.([^\.]+)-([^\.]+)\.([^\.]+)-[^\.]+\.([^\.]+)\.[^\.]+\.[^\.]+\.(ecs_container_cpu)\.(.*)/'
new = 'cip.metrics.ecs.${1}.${3}.${4}.${5}.${6}.${7}.${2}.${8}'
max = -1

# rewrite CIP PaaS telegraf ecs plugin container network metrics
# from: 'telegraf.<EC2-instanceId>.<cluster_arn>.<cluster_arn>.<container_name>.<service_name>-<deployment_colour>.<container_id>.<container_name>.<task_revision>.<task_arn>.ecs_container_net.<metric_path>'
# to:   'cip.metrics.ecs.<cluster_name>.<service_name>.<deployment_colour>.<task_id>.<container_name>.ecs_container_net.<metric_path>'
# example
# from: 'telegraf.ip-10-64-28-152_eu-west-2_compute_internal.arn:aws:ecs:eu-west-2:893166705434:cluster-paas-3094.arn:aws:ecs:eu-west-2:893166705434:cluster-paas-3094.envoy.cip-hello-flask-3094-blue.687b8171da1349069b1f94e69da30153-4057181352.envoy.total.1.arn:aws:ecs:eu-west-2:893166705434:task-paas-3094-687b8171da1349069b1f94e69da30153.ecs_container_net.tx_bytes'
# to: 'cip.metrics.ecs.paas-3094.cip-hello-flask-3094.blue.687b8171da1349069b1f94e69da30153.envoy.ecs_container_net.total.tx_bytes'
[[rewriter]]
old = '/^telegraf\.[^\.]+\.arn:aws:ecs:[^\.]+:[^\.]+:cluster-(paas[^\.]*)\.arn:aws:ecs:[^\.]+\.([^\.]+)\.([^\.]+)-([^\.]+)\.([^\.]+)\-[^\.]+\.[^\.]+\.([^\.]+)\..*\.(ecs_container_net)\.(.*)/'
new = 'cip.metrics.ecs.${1}.${3}.${4}.${5}.${2}.${7}.${6}.${8}'
max = -1

# rewrite CIP PaaS telegraf ecs plugin container blkio metrics
# from: 'telegraf.<EC2-instanceId>.<cluster_arn>.<cluster_arn>.<container_name>.<device>.<service_name>-<deployment_colour>.<container_id>.<container_name>.<task_revision>.<task_arn>.ecs_container_blkio.<metric_path>'
# to:   'cip.metrics.ecs.<cluster_name>.<service_name>.<deployment_colour>.<task_id>.<container_name>.ecs_container_blkio.<device>.<metric_path>'
# example
# from: 'telegraf.ip-10-64-28-152_eu-west-2_compute_internal.arn:aws:ecs:eu-west-2:893166705434:cluster-paas-3094.arn:aws:ecs:eu-west-2:893166705434:cluster-paas-3094.envoy.259:0.cip-hello-flask-3094-blue.687b8171da1349069b1f94e69da30153-4057181352.envoy.1.arn:aws:ecs:eu-west-2:893166705434:task-paas-3094-687b8171da1349069b1f94e69da30153.ecs_container_blkio.io_service_bytes_recursive_sync'
# to: 'cip.metrics.ecs.paas-3094.cip-hello-flask-3094.blue.687b8171da1349069b1f94e69da30153.envoy.ecs_container_blkio.259:0.io_service_bytes_recursive_sync'
[[rewriter]]
old = '/^telegraf\.[^\.]+\.arn:aws:ecs:[^\.]+:[^\.]+:cluster-(paas[^\.]*)\.arn:aws:ecs:[^\.]+\.([^\.]+)\.([^\.]+)\.([^\.]+)-([^\.]+)\.([^\.]+)-[^\.]+\..*\.(ecs_container_blkio)\.(.*)/'
new = 'cip.metrics.ecs.${1}.${4}.${5}.${6}.${2}.${7}.${3}.${8}'
max = -1

# rewrite CIP PaaS telegraf ecs plugin task metrics
# from: 'telegraf.<EC2-instanceId>.<cluster_arn>.<service_name>-<deployment_colour>.<task_revision>.<task_arn>.ecs_task.<metric_path>'
# to:   'cip.metrics.ecs.<cluster_name>.<service_name>.<deployment_colour>.<task_id>.ecs_task.<metric_path>'
# example
# from: 'telegraf.ip-10-64-28-152_eu-west-2_compute_internal.arn:aws:ecs:eu-west-2:893166705434:cluster-paas-3094.cip-hello-flask-3094-blue.1.arn:aws:ecs:eu-west-2:893166705434:task-paas-3094-687b8171da1349069b1f94e69da30153.ecs_task.limit_cpu'
# to: 'cip.metrics.ecs.paas-3094.cip-hello-flask-3094.blue.687b8171da1349069b1f94e69da30153.ecs_task.limit_cpu'
[[rewriter]]
old = '/^telegraf\.[^\.]+\.arn:aws:ecs:[^\.]+:[^\.]+:cluster-(paas[^\.]*)\.([^\.]+)-([^\.]+)\.[^\.]+\..*:task-.*-([^\.]*)\.(ecs_task)\.(.*)/'
new = 'cip.metrics.ecs.${1}.${2}.${3}.${4}.${5}.${6}'
max = -1

# Max aggregation on ActiveMQ queue size
[[aggregation]]
function ='max'
regex = '^collectd\.public_monolith_activemq_[^.]+\.jmx_activemq-Queue_([^.]+)_QueueSize\.gauge-QueueSize'
format = 'aggregates."${HOST}".collectd.public_monolith_activemq.queues.$1.queue_size_max'
interval = 60
wait = 61
cache = false

# Rewrite telemetry-internal-lab02 kube metrics with query parameters
# from: 'telemetry-internal-lab02.kube.<metric-path>?<param1>=<value1>[&<param2>=<value2>...]'
# to:   'telemetry-internal-lab02.kube.<metric-path>.<param1>=<value1>[.<param2>=<value2>...]'
# example
# from: 'telemetry-internal-lab02.kube.some.metric?foo=bar&baz=qux'
# to:   'telemetry-internal-lab02.kube.some.metric.foo=bar.baz=qux'
[[rewriter]]
old = '/^(telemetry-internal-lab02\.kube\.[^?]+)\?([^=]+=[^&]+(?:&[^=]+=[^&]+)*)$/'
new = '$1.$2'
max = -1

# Replace '&' and '=' with '.' in metric names
# from: '<metric-path>[&|=]<more>'
# to:   '<metric-path>.<more>'
# example
# from: 'telemetry-internal-lab02.kube.some.metric.foo=bar.baz=qux'
# to:   'telemetry-internal-lab02.kube.some.metric.foo.bar.baz.qux'
[[rewriter]]
old = '/[=&]/'
new = '.'
max = -1